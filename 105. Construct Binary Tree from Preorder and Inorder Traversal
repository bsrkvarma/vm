/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {

    public TreeNode BuildTree(int[] preOrder, int[] inOrder) {
        return BuildTreeRecursively(preOrder,inOrder, 0, inOrder.Length-1);
    }
    
    int preOrderIndex =0;
    TreeNode BuildTreeRecursively(int[] preOrder, int[] inOrder, int start, int end)
    {
        if(start>end)
            return null;
        var root = new TreeNode(preOrder[preOrderIndex]);
        preOrderIndex++;
        var inOrderIndex = Array.IndexOf(inOrder,root.val);        
        root.left = BuildTreeRecursively(preOrder, inOrder, start, inOrderIndex-1);
        root.right = BuildTreeRecursively(preOrder, inOrder, inOrderIndex+1,end);
        return root;
    }
    
}
