  class Verifying_an_Alien_Dictionary
    {
        public static bool IsAlienSorted(string[] words, string order)
        {
            for (int i = 0; i < words.Length - 1; i++)
            {
                if (!AreSroted(words[i], words[i + 1], order))
                    return false;
            }
            return true;
        }

        static bool AreSroted(string word1, string word2, string order)
        {
            //Base cases:
            //if both the words are same return true;
            if (word1 == word2)
                return true;

            if (order.IndexOf(word1[0]) > order.IndexOf(word2[0]))
                return false;

            if (order.IndexOf(word1[0]) < order.IndexOf(word2[0]))
                return true;

            //Start actual comparisions
            for (int i = 0; i < word1.Length; i++)
            {
                //If 2nd word is shorter and the last chacter in 2nd word is smaller than the first word same position character than return false
                if (word2.Length - 1 == i)
                {
                    if (order.IndexOf(word1[i]) < order.IndexOf(word2[i]))
                    {
                        return true;
                    }
                    return false;
                }
                //if the character is not sorted, we can return false
                if (order.IndexOf(word1[i]) > order.IndexOf(word2[i]))
                    return false;
            }
            return true;
        }
    }
